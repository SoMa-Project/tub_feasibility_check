# -----------------------------------------------------------------------------
# Combined wall grasp service call.
# -----------------------------------------------------------------------------
# The user provides targets for pregrasp and goal down.
# The service call creates a slide target pose by
# translating the goal down pose on the X-Y plane of Ifco
# in the direction of the object centroid.
# The service call then tests those targets for feasibility.

# If they are infeasible, pregrasp poses will be sampled
# from the pregrasp manifold, combined with an adjusted
# go down goal pose and a derived slide goal pose.
# Then the new goals will be tested for feasibility.

# The go down goal pose is adjusted in the following way.
# The difference in translation between the original pregrasp
# goal pose and the sampled pregrasp goal pose is applied to
# the original go down goal pose.

# This way, the difference in translation between original
# pregrasp and go down goal poses and between sampled pregrasp
# goal poses and adjusted go down goal poses is the same.

# The orientation in the adjusted go down goal pose is the
# same as the orientation in the sampled pregrasp pose.
# This way, there is no change in orientation when executing
# the go down movement.

# Similarly for slide, there is no change in orientation when
# executing the slide movement.

# -----------------------------------------------------------------------------
# Parameters.
# -----------------------------------------------------------------------------
# Random seed, used for sampling functions. If 0, unix time will be used.
uint32 seed

# The initial joint configuration of the robot.
float64[] initial_configuration

# The goal pose of the pregrasp phase.
geometry_msgs/Pose pregrasp_goal_pose

# The goal pose of the go down phase.
geometry_msgs/Pose go_down_goal_pose

# The pose of the IFCO container in the robot base frame.
geometry_msgs/Pose ifco_pose

# An array of bounding boxes with poses. Check BoundingBoxWithPose.msg
# for more details. The box_id in allowed_collisions is the same as position
# in this array.
BoundingBoxWithPose[] bounding_boxes_with_poses

# The definition of the pregrasp manifold.
WallGraspPregraspManifold pregrasp_manifold

# An array of allowed collisions in the go down phase.
# A collision that is not listed here will trigger a failure.
# Every collision in pregrasp phase is a failure.
AllowedCollision[] go_down_allowed_collisions

# An array of allowed collisions in the slide phase.
AllowedCollision[] slide_allowed_collisions
---
# No feasible trajectories were found.
uint8 FAILED=0
# Pregrasp to pregrasp_goal_pose, consequent go down to go_down_goal_pose,
# and consequent slide on the X-Y plane of IFCO is feasible.
uint8 REACHED_INITIAL=1

# Initial goal poses for pregrasp and go down are not feasible,
# but a different trajectory was found.
uint8 REACHED_SAMPLED=2

# FAILED, INITIAL_REACHED or SAMPLED_REACHED
uint8 status

# The following fields are only set when a solution was found.

# The final joint configuration of the robot at the end of the trajectory.
float64[] final_configuration

# The pregrasp trajectory.
float64[] pregrasp_trajectory

# The goal down trajectory.
float64[] go_down_trajectory

# The slide trajectory.
float64[] slide_trajectory

# The configuration space trajectory.
float64[] trajectory
